"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateUni = void 0;
var tslib_1 = require("tslib");
var fs_1 = tslib_1.__importDefault(require("fs"));
var mkdirp_1 = tslib_1.__importDefault(require("mkdirp"));
var glob_1 = tslib_1.__importDefault(require("glob"));
var colors_1 = tslib_1.__importDefault(require("colors"));
var path_1 = tslib_1.__importStar(require("path"));
var getTemplate_1 = require("./getTemplate");
var util_1 = require("./util");
var generateUni = function (data, config) {
    var SIGN = 'uni';
    var filePrefix = '/* eslint-disable */';
    var svgFunctions = [filePrefix];
    var names = [];
    var saveDir = path_1.default.resolve(config.save_dir);
    var fileName = (0, path_1.basename)(config.save_dir) || 'iconfont';
    mkdirp_1.default.sync(saveDir);
    glob_1.default.sync(path_1.default.join(saveDir, '*')).forEach(function (file) { return fs_1.default.unlinkSync(file); });
    data.svg.symbol.forEach(function (item) {
        var iconId = item.$.id;
        var iconIdAfterTrim = config.trim_icon_prefix
            ? iconId.replace(new RegExp("^".concat(config.trim_icon_prefix, "(.+?)$")), function (_, value) { return value.replace(/^[-_.=+#@!~*]+(.+?)$/, '$1'); })
            : iconId;
        var functionName = (0, util_1.hyphen2Hump)("".concat(SIGN, "_").concat(iconIdAfterTrim));
        names.push(functionName);
        svgFunctions.push("const ".concat(functionName, " = ({quot, svgSize='").concat(config.default_icon_size, "', isStr, colors}) => {return `background-image: url(${quot}data:image/svg+xml, ").concat((0, util_1.generateCase)(item, { hexToRgb: true }), "${quot}); width: ${svgSize}; height: ${svgSize};`}"));
        console.log("".concat(colors_1.default.green('√'), " Generated icon \"").concat(colors_1.default.yellow(iconId), "\""));
    });
    svgFunctions.push("export default {".concat(names.join(','), "}"));
    fs_1.default.writeFileSync(path_1.default.join(saveDir, fileName + '.js'), svgFunctions.join('\n'));
    fs_1.default.writeFileSync(path_1.default.join(saveDir, fileName + '.vue'), (0, getTemplate_1.getTemplate)('iconfont.vue').replace(/#name#/g, fileName));
    console.log("\n".concat(colors_1.default.green('√'), " All icons have been putted into dir: ").concat(colors_1.default.green(config.save_dir), "\n"));
};
exports.generateUni = generateUni;
